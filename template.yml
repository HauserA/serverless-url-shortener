
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  url-shortener

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  PasswordParameter:
    Type: String
    Default: 'url-shortener/password'
  StageName:
    Type: String
    Default: Prod
  DomainName:
    Description: >-
      Domain for the URL Shortener. (No trailing point).
    Type: String
    Default: 's.a-h.io'
  HostedZoneName:
    Description: >-
      Name of the hosted zone for the custom domain name.
    Type: String
    Default: 'a-h.io.'
  DomainCertificateARN:
    Description: >-
      ARN for the Certificate in ACM for my custom subdomain
    Type: String
    Default: arn:aws:acm:eu-central-1:436340307850:certificate/0ce0def0-af68-4117-9ed4-2247f61fd22d

Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 10

Resources:
  getIndexFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-index.getIndexHandler
      Description: A function to serve the index.html file to create new routes
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /
            Method: GET

  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the LinkTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LinkTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref LinkTable
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the LinkTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LinkTable
        - SSMParameterReadPolicy:
            ParameterName: !Ref PasswordParameter
      Environment:
        Variables:
          # Make table name, domain name and password parameter accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref LinkTable
          DOMAIN_NAME: !Ref DomainName
          PASSWORD_PARAMETER: !Ref PasswordParameter
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /url
            Method: POST

  LinkTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref StageName
      DefaultRouteSettings:
        ThrottlingBurstLimit: 50
        ThrottlingRateLimit: 50
      RouteSettings:
        "POST /url":
          ThrottlingBurstLimit: 1
          ThrottlingRateLimit: 1
      Domain:
        CertificateArn: !Ref DomainCertificateARN
        DomainName: !Ref DomainName
        Route53:
          HostedZoneName: !Ref HostedZoneName


Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/"
